g = c(2, 4, 8, 16, 32, 64),
x = c(3, 6, 12, 24, 48, 96)), file = "tst1.txt", row.names = F)
d <- read.table(file = "tst1.txt", header = TRUE)
d$g <- d$g * 5
write.table(d, file = "tst2.txt", row.names = F)
mean(sqrt(rnorm(100)))
#NaN values are produced among some of the elements because the a square root of a negative was calculated.
dates = strptime(c("20170130", "20171101", "20171230"), format = "%Y%m%d")
num.presents = c(0, 1, 0)
barplot(num.presents, names.arg = dates)
vect <- 1:100
for (i in 1:100) {
if (vect[i] < 5 | vect[i] > 90) {
vect[i] <- vect[i] * 10
} else {
vect[i] <- vect[i] * 0.1
}
}
vect
CalculateNewVector <- function(vx) {
for (i in vx[1]:length(vx)) {
if (vx[i] < 5 | vx[i] > 90) {
vx[i] <- vx[i] * 10
} else {
vx[i] <- vx[i] * 0.1
}
}
return(vx)
}
CalculateNewVector <- function(vect) {
return(ifelse((vect < 5 | vect > 90),vect*10,vect*0.1))
}
(2017-2016)/(2017-1995)*100
college.years <- 2017-2016
life.years <- 2017-1995
percentage.college.life <- college.years/life.years*100
sum(c(4, 5, 8, 11))
plot(rnorm(100))
help(sqrt)
file.create("firstscript.R")
writeLines(text = "plot(rnorm(100))", con = "firstscript.R")
source("firstscript.R")
source("firstscript.R")
source("firstscript.R")
source("firstscript.R")
source("firstscript.R")
matrix(seq(from = 31, to = 60, length.out = 30), nrow = 6, ncol = 5)
file.create("ToDo8.R")
writeLines("x1 = rnorm(100)
x2 = rnorm(100)
x3 = rnorm(100)
t = data.frame(a = x1, b = x1 + x2, c = x1 + x2 + x3)
plot(t, ask = F)
print(sd(unlist(t)))", con = "ToDo8.R", sep="\n")
source("ToDo8.R")
#The results show several scatter plot diagrams of all the possible permutations between the three
#axial values.  The standard deviation can only read unlisted vectors so the data frame must be
#unlisted.  It represents the degree of variance among all the elements in the data frame.
source("ToDo8.R")
source("ToDo8.R")
source("ToDo8.R")
source("ToDo8.R")
file.create("ToDo9.R")
writeLines("x1 = rnorm(100)
x2 = rnorm(100)
x3 = rnorm(100)
t = data.frame(a = x1, b = x1 + x2, c = x1 + x2 + x3)
plot(t$a, type = 'l', ylim = range(t), lwd = 3, col = rgb(1, 0, 0, 0.3))
lines(t$b, type = 's', lwd = 2, col = rgb(0.3,0.4,0.3,0.9))
points(t$c, pch = 20, cex = 4, col = rgb(0, 0, 1, 0.3))", con = "ToDo9.R", sep = "\n")
source("ToDo9.R")
#rgb stands for red green blue primaries which are colour specifications for a certain object.
#The object is coloured corresponding to the given intensity of each primary.
#The last arguement of rgb is alpha, which is are semi-transparent colours that are supported
#by only some devices.
#lwd is the line width, defaulting to 1.
#pch is the plotting character/symbol to use for each point.  The integer refers to a graphics symbol.
#cex is the arguement for character expansion that sets the scale for the symbol specified by pch.
file.create("tst1.txt")
write.table(data.frame(a = c(1, 2, 4, 8, 16, 32),
g = c(2, 4, 8, 16, 32, 64),
x = c(3, 6, 12, 24, 48, 96)), file = "tst1.txt", row.names = F)
d <- read.table(file = "tst1.txt", header = TRUE)
d$g <- d$g * 5
write.table(d, file = "tst2.txt", row.names = F)
mean(sqrt(rnorm(100)))
#NaN values are produced among some of the elements because the a square root of a negative was calculated.
dates = strptime(c("20170130", "20171101", "20171230"), format = "%Y%m%d")
num.presents = c(0, 1, 0)
barplot(num.presents, names.arg = dates)
vect <- 1:100
for (i in 1:100) {
if (vect[i] < 5 | vect[i] > 90) {
vect[i] <- vect[i] * 10
} else {
vect[i] <- vect[i] * 0.1
}
}
vect
CalculateNewVector <- function(vx) {
for (i in vx[1]:length(vx)) {
if (vx[i] < 5 | vx[i] > 90) {
vx[i] <- vx[i] * 10
} else {
vx[i] <- vx[i] * 0.1
}
}
return(vx)
}
CalculateNewVector <- function(vect) {
return(ifelse((vect < 5 | vect > 90),vect*10,vect*0.1))
}
(2017-2016)/(2017-1995)*100
college.years <- 2017-2016
life.years <- 2017-1995
percentage.college.life <- college.years/life.years*100
sum(c(4, 5, 8, 11))
plot(rnorm(100))
help(sqrt)
file.create("firstscript.R")
writeLines(text = "plot(rnorm(100))", con = "firstscript.R")
source("firstscript.R")
source("firstscript.R")
source("firstscript.R")
source("firstscript.R")
source("firstscript.R")
matrix(seq(from = 31, to = 60, length.out = 30), nrow = 6, ncol = 5)
file.create("ToDo8.R")
writeLines("x1 = rnorm(100)
x2 = rnorm(100)
x3 = rnorm(100)
t = data.frame(a = x1, b = x1 + x2, c = x1 + x2 + x3)
plot(t, ask = F)
print(sd(unlist(t)))", con = "ToDo8.R", sep="\n")
source("ToDo8.R")
#The results show several scatter plot diagrams of all the possible permutations between the three
#axial values.  The standard deviation can only read unlisted vectors so the data frame must be
#unlisted.  It represents the degree of variance among all the elements in the data frame.
source("ToDo8.R")
source("ToDo8.R")
source("ToDo8.R")
source("ToDo8.R")
file.create("ToDo9.R")
writeLines("x1 = rnorm(100)
x2 = rnorm(100)
x3 = rnorm(100)
t = data.frame(a = x1, b = x1 + x2, c = x1 + x2 + x3)
plot(t$a, type = 'l', ylim = range(t), lwd = 3, col = rgb(1, 0, 0, 0.3))
lines(t$b, type = 's', lwd = 2, col = rgb(0.3,0.4,0.3,0.9))
points(t$c, pch = 20, cex = 4, col = rgb(0, 0, 1, 0.3))", con = "ToDo9.R", sep = "\n")
source("ToDo9.R")
#rgb stands for red green blue primaries which are colour specifications for a certain object.
#The object is coloured corresponding to the given intensity of each primary.
#The last arguement of rgb is alpha, which is are semi-transparent colours that are supported
#by only some devices.
#lwd is the line width, defaulting to 1.
#pch is the plotting character/symbol to use for each point.  The integer refers to a graphics symbol.
#cex is the arguement for character expansion that sets the scale for the symbol specified by pch.
file.create("tst1.txt")
write.table(data.frame(a = c(1, 2, 4, 8, 16, 32),
g = c(2, 4, 8, 16, 32, 64),
x = c(3, 6, 12, 24, 48, 96)), file = "tst1.txt", row.names = F)
d <- read.table(file = "tst1.txt", header = TRUE)
d$g <- d$g * 5
write.table(d, file = "tst2.txt", row.names = F)
mean(sqrt(rnorm(100)))
#NaN values are produced among some of the elements because the a square root of a negative was calculated.
dates = strptime(c("20170130", "20171101", "20171230"), format = "%Y%m%d")
num.presents = c(0, 1, 0)
barplot(num.presents, names.arg = dates)
vect <- 1:100
for (i in 1:100) {
if (vect[i] < 5 | vect[i] > 90) {
vect[i] <- vect[i] * 10
} else {
vect[i] <- vect[i] * 0.1
}
}
vect
CalculateNewVector <- function(vx) {
for (i in vx[1]:length(vx)) {
if (vx[i] < 5 | vx[i] > 90) {
vx[i] <- vx[i] * 10
} else {
vx[i] <- vx[i] * 0.1
}
}
return(vx)
}
CalculateNewVector <- function(vect) {
return(ifelse((vect < 5 | vect > 90),vect*10,vect*0.1))
}
knitr::opts_chunk$set(echo = TRUE)
setdir("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
setdir("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
setdir("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
assets.df <- data.frame(
name=c("danube", "gander", "ganges", "mekong", "orinoco"),
os=c("W2K8", "RHEL5", "W2K8", "RHEL5", "RHEL5"),
highvulns=c(1, 0, 2, 0, 0))
str(assets.df)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
assets.df <- data.frame(
name=c("danube", "gander", "ganges", "mekong", "orinoco"),
os=c("W2K8", "RHEL5", "W2K8", "RHEL5", "RHEL5"),
highvulns=c(1, 0, 2, 0, 0))
str(assets.df)
View(assets.df)
assets.df <- data.frame(
name=c("danube", "gander", "ganges", "mekong", "orinoco"),
os=c("W2K8", "RHEL5", "W2K8", "RHEL5", "RHEL5"),
highvulns=c(1, 0, 2, 0, 0))
str(assets.df)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
assets.df <- data.frame(
name=c("danube", "gander", "ganges", "mekong", "orinoco"),
os=c("W2K8", "RHEL5", "W2K8", "RHEL5", "RHEL5"),
highvulns=c(1, 0, 2, 0, 0))
str(assets.df)
head(assets.df)
head(assets.df$os)
assets.df$ip <- c("192.168.1.5", "10.2.7.5", "192.168.1.7",  "10.2.7.6", "10.2.7.7")
head(assets.df[assets.df$highvulns>1,])
assets.df$zones <- ifelse(grep1("^192", assets.df$ip), "Zone1", "Zone2")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
assets.df <- data.frame(
name=c("danube", "gander", "ganges", "mekong", "orinoco"),
os=c("W2K8", "RHEL5", "W2K8", "RHEL5", "RHEL5"),
highvulns=c(1, 0, 2, 0, 0))
str(assets.df)
head(assets.df)
head(assets.df$os)
assets.df$ip <- c("192.168.1.5", "10.2.7.5", "192.168.1.7",  "10.2.7.6", "10.2.7.7")
head(assets.df[assets.df$highvulns>1,])
assets.df$zones <- ifelse(grepl("^192", assets.df$ip), "Zone1", "Zone2")
head(assets.df)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
assets.df <- data.frame(
name=c("danube", "gander", "ganges", "mekong", "orinoco"),
os=c("W2K8", "RHEL5", "W2K8", "RHEL5", "RHEL5"),
highvulns=c(1, 0, 2, 0, 0))
str(assets.df)
head(assets.df)
head(assets.df$os)
assets.df$ip <- c("192.168.1.5", "10.2.7.5", "192.168.1.7",  "10.2.7.6", "10.2.7.7")
head(assets.df[assets.df$highvulns>1,])
assets.df$zones <- ifelse(grepl("^192", assets.df$ip), "Zone1", "Zone2")
head(assets.df)
getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2")
setwd("~/Documents/Class Notes and Assignments/SRT411/")
setwd("~/Documents/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2")
setwd("~)
)
)
""
")
setwd("~")
getwd()
setwd("~/Documents/Class Notes and Assignmnets/SRT411/SRT411-DataAnalysisLab-2")
setwd("~/Documents/Class Notes and Assignmnets/SRT411/SRT411-DataAnalysisLab-2")
setwd("~/Documents/Class Notes and Assignmnets/")
setwd("~/Documents")
setwd("~/Documents/Class Notes and Assignmnets/SRT411/SRT411-DataAnalysisLab-2")
opts_chunk
```{r setup, include=FALSE}
knitr::opts_chunk$set(root.dir = '~/Documents/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2', echo = TRUE)
setwd("~/Documents/Class Notes and Assignmnets/SRT411/SRT411-DataAnalysisLab-2")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Documents/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2')
#In an R file the function to change the working directory would be
#setwd("~/Documents/Class Notes and Assignmnets/SRT411/SRT411-DataAnalysisLab-2")
#But in the case of an Rmd file the working directory must be changed with
#knitr::opts_knit$set(root.dir = '~/Documents/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Documents/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2')
#In an R file the function to change the working directory would be
#setwd("~/Documents/Class Notes and Assignmnets/SRT411/SRT411-DataAnalysisLab-2")
#But in the case of an Rmd file the working directory must be changed with
#knitr::opts_knit$set(root.dir = '~/Documents/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2')
unlink('SRT411DataAnalysisLab2_cache', recursive = TRUE)
unlink('SRT411DataAnalysisLab2_cache', recursive = TRUE)
getwd()
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
avURL <- "http://datadrivensecurity.info/book/ch03/data/reputation.data"
avRep <- "data/reputation.data"
if (file.access(avRep)) {
download.file(avURL, avRep)
}
pwd
getwd()
getwd()
dir.create(path = "data")
list.dirs()
getwd()
list.files
list.files()
setwd("data/")
pwd
getwd()
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
avURL <- "http://datadrivensecurity.info/book/ch03/data/reputation.data"
avRep <- "data/reputation.data"
if (file.access(avRep)) {
download.file(avURL, avRep)
}
file.remove("reputation.data")
list.files()
list.dirs("data")
list.dirs(path = "data")
av <- read.csv(avRep, sep = "#", header = FALSE)
av <- read.csv(avRep, sep = "#", header = FALSE)
colnames(av) <- c("IP", "Reliability", "Risk", "Type", "Country", "Locale", "Coord", "X")
str(av)
head(av)
av <- read.csv(avRep, sep = "#", header = FALSE)
colnames(av) <- c("IP", "Reliability", "Risk", "Type", "Country", "Locale", "Coord", "X")
str(av)
head(av)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
avURL <- "http://datadrivensecurity.info/book/ch03/data/reputation.data"
avRep <- "data/reputation.data"
if (file.access(avRep)) {
download.file(avURL, avRep)
}
av <- read.csv(avRep, sep = "#", header = FALSE)
colnames(av) <- c("IP", "Reliability", "Risk", "Type", "Country", "Locale", "Coord", "X")
str(av)
head(av)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
avURL <- "http://datadrivensecurity.info/book/ch03/data/reputation.data"
avRep <- "data/reputation.data"
if (file.access(avRep)) {
download.file(avURL, avRep)
}
av <- read.csv(avRep, sep = "#", header = FALSE)
colnames(av) <- c("IP", "Reliability", "Risk", "Type", "Country", "Locale", "Coord", "X")
str(av)
head(av)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
avURL <- "http://datadrivensecurity.info/book/ch03/data/reputation.data"
avRep <- "data/reputation.data"
if (file.access(avRep)) {
download.file(avURL, avRep)
}
av <- read.csv(avRep, sep = "#", header = FALSE)
colnames(av) <- c("IP", "Reliability", "Risk", "Type", "Country", "Locale", "Coord", "X")
str(av)
head(av)
toTest <- c("R", "python", "scala", "bash")
where <- Sys.which(toTest)
exists <- nchar(where) > 0 # TODO: Only run chunk if runtime exists
for(n in names(where)) {
path <- where[n]
if(nchar(path) <= 0) {
path <- "<not found>"
}
message("* __", n, "__: `", path, "`\n")
}
Sys.setenv(SOMETHING = "something")
something <- Sys.getenv("SOMETHING")
somethingelse <- paste(something, "+ R")
cat(paste("'", something, "' is now '", somethingelse, "'", sep=""))
Sys.setenv((avURL = "http://datadrivensecurity.info/book/ch03/data/reputation.data"))
Sys.setenv(avURL = "http://datadrivensecurity.info/book/ch03/data/reputation.data")
Sys.setenv(avRep = "data/reputation.data")
Sys.setenv(av = pd.read_csv(avRep,sep = "#"))
knitr::opts_chunk$set(echo = TRUE)
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
new.pkg
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car", "hello")
pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
new.pkg
length(new.pkg)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
```{r 3-2}
avURL <- "http://datadrivensecurity.info/book/ch03/data/reputation.data"
avRep <- "data/reputation.data"
if (file.access(avRep)) {
download.file(avURL, avRep)
}
```{r 3-0}
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
setwd("~/Class Notes and Assignments/SRT411/SRT411-DataAnalysisLab-2/")
pkg <- c("ggplot2", "scales", "maptools", "sp", "maps", "grid", "car")
new.pkg <- pkg[!(pkg %in% installed.packages())]
if (length(new.pkg)) {
install.packages(new.pkg)
}
avURL <- "http://datadrivensecurity.info/book/ch03/data/reputation.data"
avRep <- "data/reputation.data"
if (file.access(avRep)) {
download.file(avURL, avRep)
}
av <- read.csv(avRep, sep = "#", header = FALSE)
colnames(av) <- c("IP", "Reliability", "Risk", "Type", "Country", "Locale", "Coord", "X")
str(av)
head(av)
summary(av$Reliability)
summary(av$Risk)
table(av$Reliability)
table(av$Risk)
summary(av$Type, maxsum=10)
summary(av$Type, maxsum=10)
summary(av$Country, maxsum=10)
summary(av$Country, maxsum=10)
library(ggplot2)
country.top20 <- names(summary(av$Country))[1:20]
library(ggplot2)
country.top20 <- names(summary(av$Country))[1:20]
gg <- ggplot(data=subset(av, Country %in% country.top20), aes(x=reorder(Country, Country, length)))
gg <- gg + geom_bar(fill="#000099")
gg <- gg + labs(title="Country Counts", x="Country", y="Count")
gg <- gg + coord_flip()
gg <- gg + theme(panel.grid=element_blank(), panel.background=element_blank())
print(gg)
library(ggplot2)
country.top20 <- names(summary(av$Country))[1:20]
gg <- ggplot(data=subset(av, Country %in% country.top20), aes(x=reorder(Country, Country, length)))
gg <- gg + geom_bar(fill="#000099")
gg <- gg + labs(title="Country Counts", x="Country", y="Count")
gg <- gg + coord_flip()
gg <- gg + theme(panel.grid=element_blank(), panel.background=element_blank())
print(gg)
View(av)
reorder
help(reorder())
help(reorder)
gg <- ggplot(data=av, aes(x=Risk))
gg <- gg + geom_bar(fill="#000099")
gg <- gg + scale_x_discrete(limits=seq(max(av$Risk)))
gg <- gg + labs(title="'Risk' Counts", x="Risk Score", y="count")
gg <- gg + theme(panel.grid=element_blank(), panel.background=element_blank())
print(gg)
gg <- ggplot(data=av, aes(x=Reliability))
gg <- gg + geom_bar(fill="$000099")
gg <- gg + scale_x_discrete(limits=seq(max(av$Reliability)))
gg <- gg + labs(title="'Reliability' Counts", x="Reliability Score", y="Count")
gg <- gg + theme(panel.grid=element_blank(), panel.background=element_blank())
print(gg)
gg <- ggplot(data=av, aes(x=Reliability))
gg <- gg + geom_bar(fill="#000099")
gg <- gg + scale_x_discrete(limits=seq(max(av$Reliability)))
gg <- gg + labs(title="'Reliability' Counts", x="Reliability Score", y="Count")
gg <- gg + theme(panel.grid=element_blank(), panel.background=element_blank())
print(gg)
country10 <- summary(av$Country, maxsum=10)
country10.perc10 <- country10/nrow(av)
print(country10.perc10)
